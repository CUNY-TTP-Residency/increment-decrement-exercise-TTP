{"version":3,"sources":["components/increment-decrement/increment-decrement.jsx","App.js","reportWebVitals.js","index.js"],"names":["IncrementDecrement","props","state","num","incrementOrDecrement","bind","e","target","name","this","setState","alert","className","onClick","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTA2CeA,G,wDAtCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,IAAKF,EAAME,KAEf,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBALd,E,iEAQGC,GACjB,OAAOA,EAAEC,OAAOC,MACZ,IAAK,YACDC,KAAKC,SAAS,CAAEP,IAAKM,KAAKP,MAAMC,IAAI,IACpC,MACJ,IAAK,YACD,GAAsB,IAAnBM,KAAKP,MAAMC,IAAU,CACpBQ,MAAM,6BACN,MAEJF,KAAKC,SAAS,CAAEP,IAAKM,KAAKP,MAAMC,IAAI,O,+BAM5C,OACI,sBAAKS,UAAU,YAAf,UACI,wBAAQJ,KAAK,YAAYK,QAASJ,KAAKL,qBAAvC,uBACA,uBAAMU,GAAG,MAAT,cAAiBL,KAAKP,MAAMC,IAA5B,OACA,wBAAQK,KAAK,YAAYK,QAASJ,KAAKL,qBAAvC,8B,GA7BiBW,cCOlBC,MARf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,CAAoBT,IAAO,OCMlBc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4d271fe0.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './increment-decrement.css';\r\n\r\nclass IncrementDecrement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            num: props.num\r\n        }\r\n        this.incrementOrDecrement = this.incrementOrDecrement.bind(this);\r\n    }\r\n\r\n    incrementOrDecrement(e){\r\n        switch(e.target.name){\r\n            case 'Increment':\r\n                this.setState({ num: this.state.num+1 })\r\n                break;\r\n            case 'Decrement':\r\n                if(this.state.num === 0){\r\n                    alert(\"Cannot be less than zero.\")\r\n                    break;\r\n                }\r\n                this.setState({ num: this.state.num-1 })\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <button name='Increment' onClick={this.incrementOrDecrement}>Increment</button>\r\n                <span id='num'> {this.state.num} </span>\r\n                <button name='Decrement' onClick={this.incrementOrDecrement}>Decrement</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nIncrementDecrement.propTypes = {\r\n    num: PropTypes.number.isRequired\r\n}\r\n\r\nexport default IncrementDecrement;","import './App.css';\nimport IncrementDecrement from './components/increment-decrement/increment-decrement';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IncrementDecrement num = {0} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}